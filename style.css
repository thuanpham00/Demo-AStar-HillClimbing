@property --rotate {
  syntax: "<angle>";
  initial-value: 132deg;
  inherits: false;
}

@keyframes spin {
  0% {
    --rotate: 0deg;
  }
  100% {
    --rotate: 360deg;
  }
}

body {
  --card-height: 65vh;
  font-family: "Roboto", sans-serif;
  font-weight: 400;
  background-color: #fff;
}

table {
  position: relative;
  z-index: 1;
  border-collapse: collapse;
  margin: 20px auto;
}

table::after {
  position: absolute;
  content: "";
  top: calc(var(--card-height) / 7);
  left: 0;
  right: 0;
  z-index: -1;
  height: 90%;
  width: 90%;
  margin: 0 auto;
  transform: scale(0.8);
  filter: blur(calc(var(--card-height) / 6));
  background-color: #4158d0;
  background-image: linear-gradient(var(--rotate), #4158d0 0%, #c850c0 46%, #ffcc70 100%);
  opacity: 1;
  transition: opacity 0.5s;
  animation: spin 2.5s linear infinite;
}

td {
  width: 40px;
  height: 40px;
  padding: 0;
}

input {
  border: 1px solid gray; /* Viền mỏng cho các ô input */
  width: 100%;
  height: 100%;
  text-align: center;
  font-size: 20px;
  box-sizing: border-box; /* Đảm bảo kích thước input không bị thay đổi */
  outline: none;
}

/* Viền dày cho các khối 3x3 */

/* Viền ngang */
tr:nth-child(3n) td input {
  border-bottom: 2px solid black; /* Viền dưới cho khối 3x3 */
}

tr:nth-child(1) td input,
tr:nth-child(4) td input,
tr:nth-child(7) td input {
  border-top: 2px solid black; /* Viền trên cho khối 3x3 */
}

/* Viền dọc */
td:nth-child(3n) input {
  border-right: 2px solid black; /* Viền phải cho khối 3x3 */
}

td:nth-child(1) input,
td:nth-child(4) input,
td:nth-child(7) input {
  border-left: 2px solid black; /* Viền trái cho khối 3x3 */
}

/* Loại bỏ viền trùng lặp cho các góc của các khối 3x3 */
td:nth-child(3n) input {
  border-right: 2px solid black; /* Viền phải dày cho ô cuối cùng trong khối 3x3 */
}

tr:nth-child(3n) td input {
  border-bottom: 2px solid black; /* Viền dưới dày cho hàng cuối cùng trong khối 3x3 */
}

td:nth-child(3n + 1) input {
  border-left: 2px solid black; /* Viền trái dày cho ô đầu tiên trong khối 3x3 */
}

tr:nth-child(1) td input,
tr:nth-child(4) td input,
tr:nth-child(7) td input {
  border-top: 2px solid black; /* Viền trên dày cho hàng đầu tiên trong khối 3x3 */
}

h1 {
  text-transform: uppercase;
  text-align: center;
  font-size: 28px;
  font-weight: 600;
}

h2 {
  text-align: center;
  font-size: 20px;
  font-weight: 400;
}

.text-shadow-multiple {
  font-size: 24px;
  color: #fb8b24; /* Màu chữ chính */
  text-shadow: 0 5px 10px rgba(246, 147, 7, 0.8); /* Tạo hiệu ứng phát sáng màu #0077b6 */
}

.main {
  margin-top: 50px;
  width: 100%;
  max-width: 1140px;
  margin-left: auto;
  margin-right: auto;
  padding: 0 16px;
}

.content-right {
  margin-top: 10px;
  text-align: center;
  width: 100%;
}

.content-left {
  width: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
}

.randomButton,
.btn {
  padding: 12px;
  background-color: #fb8b24;
  outline: none;
  border: none;
  color: white;
  font-size: 16px;
}

.randomButton:hover {
  transition: all 0.3s ease;
  opacity: 0.8;
}

.random-wrapper {
  margin-top: 50px;
  display: flex;
  justify-content: center;
  gap: 8px;
}

.btn-clear {
  background-color: gray;
  transition: all 0.3s ease;
}

.btn-clear:hover {
  opacity: 0.8;
}

.menu-inner {
  width: auto;
}

.select-menu {
  margin-top: 30px;
  display: flex;
  justify-content: flex-start;
  align-items: flex-start;
  flex-direction: column;
}

.flex {
  width: 450px;
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 4px;
}

.btn-run {
  background-color: #fb8b24;
  width: fit-content;
}

.btn-run:hover {
  transition: all 0.3s ease-in;
  opacity: 0.7;
}

.randomButton {
  padding: 8px;
  border-radius: 2px;
}

#inputNodeBlank {
  padding: 6px;
  width: 40px;
  font-size: 16px;
  border: 1px solid black;
}
